class Solution {
    public int minCostConnectPoints(int[][] points) {
        
        int len = points.length;
        int cost = 0;

        int dist[] = new int[len];

        for(int i=0; i<len; i++){
            dist[i] = Integer.MAX_VALUE;
        }

        boolean visited[] = new boolean[len];

        visited[0] = true;

        int c=0, cur=0;

        while(c++ < len-1){
            int next = 0;
            int edge = Integer.MAX_VALUE;
            for(int i=0; i<len; i++){
                
                
                if(!visited[i]){

                    int weight = Math.abs(points[cur][0] - points[i][0]) + Math.abs(points[cur][1] - points[i][1]);

                    dist[i] = Math.min(weight, dist[i]);

                    if(dist[i] < edge){
                        edge = dist[i];
                        next = i;
                    }

                }
            }

            cur = next;
            visited[cur] = true;
            cost += edge;
        }

        return cost;

    }
}

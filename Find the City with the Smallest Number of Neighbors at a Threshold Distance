class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        
        int[][] graph = new int[n][n];

        for(int row[]: graph){
            Arrays.fill(row, (int)1e4+1);
        }

        for(int edge[]: edges){
            //from(u), to(v), weight
            int u = edge[0];
            int v = edge[1];
            int weight = edge[2];

            graph[u][v] = weight;
            graph[v][u] = weight;
        }

        for(int i=0; i<n; i++)
            graph[i][i] = 0;
        
      

        for(int k=0; k<n; k++){
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++){
                    graph[i][j] = Math.min(graph[i][j], graph[i][k]+graph[k][j]);
                }
            }
        }

        

        int city = n;
        int res = 0;
        
        for(int i=0; i<n; i++){
            int count = 0;
            for(int j=0; j<n; j++){
                if(graph[i][j] <= distanceThreshold)
                    count++;
            }
            if(count<=city){
                city = count;
                res = i;
            }
        }

    return res;
    }
}

